name: Run Allure (Vitest) + Playwright Tests and Deploy Reports

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  run-tests:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: testdb
          MYSQL_USER: remoteuser
          MYSQL_PASSWORD: mypassword
          MYSQL_AUTHENTICATION_PLUGIN: mysql_native_password
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      # 1Ô∏è‚É£ Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # 3Ô∏è‚É£ Load environment variables
      - name: Load environment variables
        run: |
          cp back-end/server/.env.ci back-end/server/.env

      # 4Ô∏è‚É£ Install dependencies
      - name: Install backend dependencies
        working-directory: ./back-end/server
        run: npm install

      - name: Install frontend dependencies
        working-directory: ./front-end
        run: npm install

      - name: Install e2e test dependencies
        working-directory: ./e2e-tests
        run: |
          npm install
          npx playwright install --with-deps

      # 5Ô∏è‚É£ Initialize MySQL database
      - name: Initialize MySQL Database
        run: |
          sudo apt-get install -y mysql-client
          echo "‚è≥ Waiting for MySQL to be ready..."
          for i in {1..10}; do
            if mysqladmin ping -h127.0.0.1 -uroot -proot --silent; then
              echo "‚úÖ MySQL is ready!"
              break
            fi
            sleep 5
          done
          mysql -h127.0.0.1 -uroot -proot -e "CREATE DATABASE IF NOT EXISTS testdb;"
          if [ -f back-end/server/init.sql ]; then
            mysql -h127.0.0.1 -uroot -proot testdb < back-end/server/init.sql
          fi

      # 6Ô∏è‚É£ Start backend
      - name: Start backend
        working-directory: ./back-end/server
        env:
          NODE_ENV: test
          PORT: 5001
          DB_HOST: 127.0.0.1
          DB_USER: root
          DB_PASSWORD: root
          DB_NAME: testdb
          DB_PORT: 3306
          JWT_SECRET: test_secret
        run: |
          nohup node server.js > backend.log 2>&1 &
          echo "‚è≥ Waiting for backend..."
          for i in {1..20}; do
            if curl -s http://127.0.0.1:5001/health > /dev/null; then
              echo "‚úÖ Backend is ready!"
              break
            fi
            sleep 3
          done

      # 7Ô∏è‚É£ Start frontend
      - name: Start frontend
        working-directory: ./front-end
        run: |
          nohup npm run dev -- --host > frontend.log 2>&1 &
          echo "‚è≥ Waiting for frontend..."
          for i in {1..20}; do
            if curl -s http://127.0.0.1:5173 > /dev/null; then
              echo "‚úÖ Frontend is up!"
              break
            fi
            sleep 3
          done

      # 8Ô∏è‚É£ Run Vitest (Allure)
      - name: Run Vitest with Allure
        working-directory: ./front-end
        run: |
          npm run test:report
          npx allure generate ./allure-results --clean -o ../allure-report-vite

      # 9Ô∏è‚É£ Run Playwright Tests
      - name: Run Playwright Tests
        working-directory: ./e2e-tests
        env:
          API_BASE_URL: http://127.0.0.1:5001
        run: |
          echo "üé≠ Running Playwright tests..."
          npx playwright test --reporter=html
          mkdir -p ../playwright-report
          cp -r playwright-report ../playwright-report

      # üîü Combine reports into single deployable folder
      - name: Combine reports into one folder
        run: |
          mkdir -p combined-report
          cp -r allure-report-vite combined-report/allure-report
          cp -r playwright-report combined-report/playwright-report

          cat <<EOF > combined-report/index.html
          <html>
            <head>
              <title>Test Reports</title>
            </head>
            <body style="font-family:sans-serif;text-align:center;padding:40px;">
              <h1>‚úÖ Test Reports Dashboard</h1>
              <p><a href="./allure-report/index.html">üìä View Allure (Vitest) Report</a></p>
              <p><a href="./playwright-report/index.html">üé≠ View Playwright Report</a></p>
            </body>
          </html>
          EOF

      # 1Ô∏è‚É£1Ô∏è‚É£ Deploy to GitHub Pages
      - name: Deploy combined reports to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: combined-report
          publish_branch: gh-pages
          force_orphan: true

      # 1Ô∏è‚É£2Ô∏è‚É£ Display report link
      - name: Display Reports URL
        run: |
          echo "## ‚úÖ Reports Published Successfully" >> $GITHUB_STEP_SUMMARY
          echo "- [Allure & Playwright Reports](https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/)" >> $GITHUB_STEP_SUMMARY
