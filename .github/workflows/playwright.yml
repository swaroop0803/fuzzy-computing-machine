name: E2E Tests

on:
  push:
    branches: [main]
  pull_request:

jobs:
  e2e-tests:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: testdb
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # -------------------------------
      # E2E Dependencies
      - name: Install E2E Dependencies
        run: npm install
        working-directory: e2e-tests

      # -------------------------------
      # Backend dependencies
      - name: Install backend dependencies
        run: npm install
        working-directory: back-end/server

      # -------------------------------
      # Initialize MySQL Schema (THIS IS THE KEY FIX)
      - name: Initialize MySQL Schema
        run: |
          # Wait until the MySQL server is fully healthy and ready
          npx wait-on tcp:3306
          
          # Execute the init.sql script to create the users table and RegisterUser procedure
          # This should fix the "PROCEDURE... does not exist" error.
          mysql -h 127.0.0.1 -u root -proot testdb < back-end/server/init.sql
        shell: bash

      # -------------------------------
      # Frontend dependencies
      - name: Install frontend dependencies
        run: npm install
        working-directory: front-end

      # -------------------------------
      # Install Playwright browsers
      - name: Install Playwright browsers
        run: npx playwright install
        working-directory: e2e-tests

      # -------------------------------
      # Start backend server (MODIFIED for logging)
      - name: Start backend server and capture logs
        run: |
          cd back-end/server
          # Use nohup and redirect output to a file (backend.log)
          env $(cat .env.ci | xargs) nohup node server > backend.log 2>&1 &
          npx wait-on http://localhost:5001

      # -------------------------------
      # Start frontend server (MODIFIED for logging)
      - name: Start frontend server and capture logs
        run: |
          cd front-end
          # Use nohup and redirect output to a file (frontend.log)
          nohup npm run dev > frontend.log 2>&1 &
          npx wait-on http://localhost:5173

      # -------------------------------
      # Run Playwright tests
      - name: Run E2E tests
        run: npx playwright test --reporter=html
        working-directory: e2e-tests

      # -------------------------------
      # Upload Logs and Reports
      - name: Upload Logs and Playwright Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: debug-artifacts
          path: |
            back-end/server/backend.log
            front-end/frontend.log
            e2e-tests/test-results/
            e2e-tests/playwright-report/
