name: E2E Tests (Playwright)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  playwright:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    
    # CRITICAL FIX: Define the MySQL service container
    services:
      mysql: # This service name becomes the HOSTNAME for the Node.js application
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root_password # Replace with your actual DB_PASSWORD secret
          MYSQL_DATABASE: testdb # Replace with your actual DB_NAME secret
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=5

    steps:
      - uses: actions/checkout@v4

      # --- Setup Node ---
      - uses: actions/setup-node@v4
        with:
          node-version: 20

      # --- 1. Start Backend Server (Required for API calls) ---
      - name: Install Backend Dependencies
        run: npm install --prefix ./back-end/server

      - name: Start Backend Server (on port 5001)
        # Fix uses DB_HOST=mysql and runs in background (&)
        run: DB_HOST=mysql npm start --prefix ./back-end/server & 
        
      - name: Install Wait-On Utility
        run: npm install wait-on

      # --- 2. Setup Frontend and Playwright ---
      - name: Install Frontend Dependencies
        # FIX: Use the correct prefix for the frontend directory
        run: npm install --prefix ./front-end

      - name: Install Playwright and Dependencies
        run: npx playwright install --with-deps

      - name: Start Frontend (Vite)
        # FIX: Use the correct prefix for the frontend directory and run in background (&)
        run: npm run dev --prefix ./front-end &
      
      - name: Wait for All Services to be Accessible
        # Wait for both backend (TCP) and frontend (HTTP)
        run: npx wait-on --timeout 120000 tcp:localhost:5001 http://localhost:5173

      # --- 3. Run Tests ---
      - name: Run Playwright Tests
        run: npx playwright test --reporter=html
      
      # --- 4. Upload Results ---
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
