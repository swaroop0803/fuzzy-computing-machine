name: E2E Tests (Playwright)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  playwright:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root_password
          MYSQL_DATABASE: testdb
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -u root -p$$MYSQL_ROOT_PASSWORD"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      # 1Ô∏è‚É£ Checkout repo
      - uses: actions/checkout@v4

      # 2Ô∏è‚É£ Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # 3Ô∏è‚É£ Install wait-on globally
      - name: Install wait-on globally
        run: npm install -g wait-on

      # 4Ô∏è‚É£ Wait for MySQL
      - name: Wait for MySQL
        run: |
          for i in {1..10}; do
            if [[ "$(docker inspect --format='{{.State.Health.Status}}' ${{ job.services.mysql.id }})" == "healthy" ]]; then
              echo "‚úÖ MySQL service is healthy."
              exit 0
            fi
            echo "‚è≥ Waiting for MySQL service... Attempt $i"
            sleep 10
          done
          echo "‚ùå MySQL did not become healthy in time."
          exit 1

      # 4.5Ô∏è‚É£ Initialize MySQL with init.sql
      - name: Initialize MySQL (tables & procedures)
        run: |
          echo "Running init.sql to create tables and procedures..."
          mysql -h 127.0.0.1 -P 3306 -u root -proot_password testdb < back-end/server/init.sql

      # 5Ô∏è‚É£ Cache & install backend dependencies
      - name: Cache backend dependencies
        uses: actions/cache@v4
        with:
          path: back-end/server/node_modules
          key: ${{ runner.os }}-backend-${{ hashFiles('back-end/server/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-backend-

      - name: Install backend dependencies
        run: npm ci --prefix ./back-end/server

      # 6Ô∏è‚É£ Copy .env.ci to backend
      - name: Use .env.ci for backend
        run: cp back-end/server/.env.ci back-end/server/.env

      # 7Ô∏è‚É£ Start backend server
      - name: Start Backend Server
        run: |
          cd back-end/server
          node server &
          echo "‚úÖ Backend started in background"
        shell: bash

      # 8Ô∏è‚É£ Cache & install frontend dependencies
      - name: Cache frontend dependencies
        uses: actions/cache@v4
        with:
          path: front-end/node_modules
          key: ${{ runner.os }}-frontend-${{ hashFiles('front-end/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-frontend-

      - name: Install frontend dependencies
        run: npm ci --prefix ./front-end

      # 9Ô∏è‚É£ Start frontend (Vite)
      - name: Start Frontend
        run: |
          cd front-end
          npm run dev &
          echo "‚úÖ Frontend started in background"
        shell: bash

      # üîü Cache & install Playwright dependencies
      - name: Cache Playwright dependencies
        uses: actions/cache@v4
        with:
          path: e2e-tests/node_modules
          key: ${{ runner.os }}-e2e-${{ hashFiles('e2e-tests/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-e2e-

      - name: Install Playwright dependencies
        run: |
          cd e2e-tests
          npm ci
          npx playwright install --with-deps

      # 1Ô∏è‚É£1Ô∏è‚É£ Wait for backend & frontend to be ready
      - name: Wait for backend & frontend
        run: npx wait-on --timeout 180000 http://127.0.0.1:5001/health http://127.0.0.1:5173

      # 1Ô∏è‚É£2Ô∏è‚É£ Run Playwright E2E tests
      - name: Run Playwright E2E Tests
        run: |
          cd e2e-tests
          npx playwright test --reporter=html
        env:
          CI: true

      # 1Ô∏è‚É£3Ô∏è‚É£ Upload Playwright report
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: e2e-tests/playwright-report/
          retention-days: 30
