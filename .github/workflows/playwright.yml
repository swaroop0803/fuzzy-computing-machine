name: E2E Tests (Playwright)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  playwright:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      mysql:
        # Uses the configuration matching DB_HOST=mysql and DB_PASSWORD=root_password
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root_password
          MYSQL_DATABASE: testdb
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -u root -p$$MYSQL_ROOT_PASSWORD"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - uses: actions/checkout@v4

      # 1Ô∏è‚É£ Setup Node.js
      - uses: actions/setup-node@v4
        with:
          node-version: 20

      # 2Ô∏è‚É£ Wait for MySQL service
      - name: Wait for MySQL
        run: |
          for i in {1..10}; do
            if [[ "$(docker inspect --format='{{.State.Health.Status}}' ${{ job.services.mysql.id }})" == "healthy" ]]; then
              echo "‚úÖ MySQL service is healthy."
              exit 0
            fi
            echo "‚è≥ Waiting for MySQL service... Attempt $i"
            sleep 10
          done
          echo "‚ùå MySQL did not become healthy in time."
          exit 1

      # 3Ô∏è‚É£ Install Dependencies (Backend, Frontend, E2E)
      - name: Install Node Dependencies
        run: |
          npm ci --prefix ./back-end/server
          npm ci --prefix ./front-end
          npm ci --prefix ./e2e-tests

      # 4Ô∏è‚É£ Install Playwright Browsers
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
        working-directory: e2e-tests
          
      # 5Ô∏è‚É£ Create .env.ci for Backend Configuration (Matches Canvas)
      - name: Create .env.ci file
        run: |
          echo "PORT=5001" > .env.ci
          echo "DB_HOST=mysql" >> .env.ci
          echo "DB_USER=root" >> .env.ci
          echo "DB_PASSWORD=root_password" >> .env.ci
          echo "DB_NAME=testdb" >> .env.ci
          echo "JWT_SECRET=a_very_strong_and_secret_key_that_no_one_can_guess" >> .env.ci
        working-directory: back-end/server

      # 6Ô∏è‚É£ Start Backend (Loads variables from .env.ci)
      - name: Start Backend Server
        run: |
          echo "üîπ Starting backend..."
          # Load and export variables from .env.ci
          set -a
          source .env.ci
          set +a
          node server.js > server.log 2>&1 &
          echo "üîπ Backend PID: $!"
        working-directory: back-end/server

      # 7Ô∏è‚É£ Tail backend logs until ready
      - name: Wait for Backend to be Ready (Port 5001)
        run: |
          timeout 180 bash -c 'until grep -q "üöÄ Server is running" server.log; do
            echo "‚è≥ Waiting for backend (5001)..."
            tail -n 10 server.log
            sleep 5
          done
          echo "‚úÖ Backend is ready!"'
        working-directory: back-end/server

      # 8Ô∏è‚É£ Start Frontend (Vite)
      - name: Start Frontend
        run: |
          npm run dev > vite.log 2>&1 &
          echo "üîπ Frontend started"
        working-directory: front-end
        
      # 9Ô∏è‚É£ Wait for Frontend to be ready
      - name: Wait for Frontend (Port 5173)
        run: |
          timeout 180 bash -c 'until curl -s http://127.0.0.1:5173 > /dev/null; do
            echo "‚è≥ Waiting for frontend (5173)..."
            tail -n 10 vite.log
            sleep 5
          done
          echo "‚úÖ Frontend is ready!"'
        working-directory: front-end

      # üîü Run Playwright E2E Tests (Runs all isolated tests in Chromium/Firefox)
      - name: Run Playwright E2E Tests
        run: npx playwright test --reporter=html
        working-directory: e2e-tests

      # 1Ô∏è‚É£1Ô∏è‚É£ Upload Playwright report as artifact
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: e2e-tests/playwright-report/
          retention-days: 30