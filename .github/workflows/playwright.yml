name: Run Playwright E2E Tests (Frontend + Backend + MySQL)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  playwright-tests:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: testdb
          MYSQL_USER: root
          MYSQL_PASSWORD: root
          MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      # 1Ô∏è‚É£ Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # 3Ô∏è‚É£ Install backend dependencies
      - name: Install backend dependencies
        working-directory: ./back-end/server
        run: npm install

      # 4Ô∏è‚É£ Install frontend dependencies
      - name: Install frontend dependencies
        working-directory: ./front-end
        run: npm install

      # 5Ô∏è‚É£ Install Playwright + e2e test dependencies
      - name: Install Playwright dependencies
        working-directory: ./e2e-tests
        run: |
          npm install
          npx playwright install --with-deps

      # 6Ô∏è‚É£ Initialize MySQL Database
      - name: Initialize MySQL Database
        run: |
          sudo apt-get install -y mysql-client
          echo "‚è≥ Waiting for MySQL to be ready..."
          sleep 15
          mysql -h 127.0.0.1 -P 3306 -u root -proot -e "CREATE DATABASE IF NOT EXISTS testdb;"
          if [ -f back-end/server/init.sql ]; then
            mysql -h 127.0.0.1 -P 3306 -u root -proot testdb < back-end/server/init.sql
          fi

      # 7Ô∏è‚É£ Start backend server (use .env.ci)
      - name: Start backend server
        working-directory: ./back-end/server
        run: |
          echo "‚öôÔ∏è Using .env.ci for environment variables..."
          cp .env.ci .env
          nohup node server.js > backend.log 2>&1 &
          echo "‚è≥ Waiting for backend to start..."
          for i in {1..20}; do
            if curl -s http://127.0.0.1:5001/health > /dev/null; then
              echo "‚úÖ Backend is up!"
              exit 0
            fi
            sleep 3
          done
          echo "‚ùå Backend failed to start"
          cat backend.log
          exit 1

      # 8Ô∏è‚É£ Start frontend (Vite)
      - name: Start frontend
        working-directory: ./front-end
        run: |
          nohup npm run dev -- --host > frontend.log 2>&1 &
          echo "‚è≥ Waiting for frontend to start..."
          for i in {1..20}; do
            if curl -s http://127.0.0.1:5173 > /dev/null; then
              echo "‚úÖ Frontend is up!"
              exit 0
            fi
            sleep 3
          done
          echo "‚ùå Frontend failed to start"
          cat frontend.log
          exit 1

      # 9Ô∏è‚É£ Run Playwright tests
      - name: Run Playwright Tests
        working-directory: ./e2e-tests
        env:
          API_BASE_URL: http://127.0.0.1:5001
        run: |
          echo "üé≠ Running Playwright tests..."
          npx playwright test --reporter=line
