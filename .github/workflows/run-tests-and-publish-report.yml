# ci.yml

# The name of the workflow, displayed on GitHub's Actions tab
name: Run tests and publish report

# Defines when the workflow runs (on every push)
on: [push]

# A workflow run is made up of one or more jobs
jobs:
  test:
    # Configure the type of machine to run the job on
    runs-on: ubuntu-latest

    # Sequence of tasks to be executed as part of the job
    steps:
      # Step 1: Checks out your repository code
      - uses: actions/checkout@v3
      
      # Step 2: Sets up the Java Development Kit (JDK) environment
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: zulu
          java-version: 17
          
      # FIX 1: Make Gradle Wrapper executable (fixes "No such file or directory" error)
      - name: Make gradlew executable
        run: chmod +x ./gradlew

      # Step 3: Runs the Gradle 'clean test' command to execute all tests
      - name: Run tests
        run: ./gradlew clean test
        
      # Step 4: Loads previous report history from the gh-pages branch
      - name: Load test report history
        uses: actions/checkout@v3 
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages
          
      # Step 5: Builds the Allure report using results and history
      - name: Build test report
        uses: simple-elf/allure-report-action@v1.7
        if: always()
        with:
          gh_pages: gh-pages
          allure_history: allure-history
          allure_results: build/allure-results
          
      # Step 6: Publishes the report history to the gh-pages branch
      - name: Publish test report
        uses: peaceiris/actions-gh-pages@v3
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: allure-history
          # FIX 2: Ensures the gh-pages branch is created if it doesn't exist
          force_orphan: true
