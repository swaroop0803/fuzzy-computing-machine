name: Run tests and publish Allure report (Monorepo)

on:
  push:
    branches: [ main ]

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    # NEW: Add permissions for accessing Pages information
    permissions:
      contents: write
      pages: write 

    steps:
      # 1️⃣ Checkout the repository (Necessary for code and token)
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }} # Needed for publishing

      # 2️⃣ Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # 3️⃣ Install dependencies (FIX: Added working-directory)
      - name: Install dependencies
        run: npm ci
        working-directory: front-end 

      # 4️⃣ Run tests (FIX: Added working-directory & changed script to 'npm test')
      - name: Run tests and generate Allure results
        # Assuming your package.json uses 'npm test' or you have configured it
        run: npm test 
        working-directory: front-end 

      # 5️⃣ COMBINED STEP: Build and Publish Allure Report to GitHub Pages
      # This single action replaces the previous Steps 5, 6, and 7,
      # and reliably creates the gh-pages branch if it doesn't exist.
      - name: Build and Publish Allure Report to GitHub Pages
        uses: simple-elf/allure-report-action@v1.7
        if: always()
        id: deployment # Retaining this ID for URL reporting (Step 6)
        with:
          # Tell Allure where to find the JSON results
          allure_results: front-end/allure-results
          # Required for publishing
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          # The directory where the final HTML report will be created
          allure_report: allure-report-html 

      # 6️⃣ Display the live URL as a job summary output (Updated reference ID)
      - name: Display Live Report URL
        if: always() # Changed to 'always()' to report publishing attempts even on failure
        run: |
          echo "## ✅ Allure Report Published" >> $GITHUB_STEP_SUMMARY
          echo "The live report is available here (may take a minute to deploy):" >> $GITHUB_STEP_SUMMARY
          # Uses the output URL generated by the simple-elf/allure-report-action
          echo "- [Live Report Link](${{ steps.deployment.outputs.report_url }})" >> $GITHUB_STEP_SUMMARY
